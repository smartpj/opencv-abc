{"./":{"url":"./","title":"Introduction","keywords":"","body":"OpenCV学ぶ 特徴量マッチングは、 基本的な方法とそれの高速版があるという流れ。 基本的な方法は、OpenCVでAPIになっています。 画像処理[6] 特徴抽出[3] 物体認識[3] パノラマ[3] 合計:[15] OpenCVをつかって、特徴量計算、物体マッチング、座標計算、 という流れが身につきます。 OpenCVとは？ OpenCV是一个用于图像处理、分析、机器视觉方面的开源函数库. OpenCV的全称，是Open source Computer Vision Library,开放源代码计算机视觉库。也就是说，它是一套关于计算机视觉的开放源代码的API函数库。 它的一个目标是提供友好的机器视觉接口函数，从而使得复杂的机器视觉产品可以加速面世。该库包含了横跨工业产品检测、医学图像处理、安防、用户界面、摄像头标定、三维成像、机器视觉等领域的超过500个接口函数 计算机视觉概念/画像認識概念 图像处理和计算机视觉の概念： 图像处理实际上就是数字图像处理，是把真实世界中的连续三维随机信号投影到传感器的二维平面上，采样并量化后得到二维矩阵。数字图像处理就是二维矩阵的处理，而从二维图像中恢复出三维场景就是计算机视觉的主要任务之一。 图像处理所涉及到的三个重要属性：连续性，二维矩阵，随机性。 数学知识：连续性▶高等数学（微积分），二维矩阵▶线性代数（矩阵论），随机性▶概率论和随机过程。 深度学习概念 传统机器学习： 经验数据存储 以特征（feature）形式存储的数据（data） 机器学习算法依靠这些数据来产生模型（model） 局限： 人们对于特征的定义会限制最终任务性能的天花板。 改善： 特征的学习交由机器自动完成 ▶ 表示学习（represention learning） ▶提高任务的最终性能 ▶可复用 深度学习便是表示学习的一个代表。 深度学习： 原始数据（raw data）输入 ▶ 算法抽象 逐层抽象成任务所需要的特征 ▶ 特征和任务目标的映射（mapping） 传统机器学习 任务模块模型学习 深度学习 特征学习，特征抽象，模型学习 借助多层任务模块完成最终学习任务。故称为“深度” 深度学习一类代表算法是神经网络算法 神经网络算法 深度置信网络（deep belief network） 递归神经网络（recurrent neural netwark） 卷积神经网络（Convolution Neural Network）CNN 卷积神经网络优势在计算机视觉，自然语言处理，医学图像处理方面。 实验结果表明神经网络模型相对于传统机器学习的预测能力突出。 2011年开始进入了深度学习（deep learning）的时代。 deep的含义是人们现在已经训练和掌握了层数更多的网络模型。 有效数据的极速扩增，高性能计算硬件的实现和训练方法的大幅改善，三者作用促成了神经网络的第三次复兴。 ▶产业成产力提升。 它使研究者或者工程师摆脱了复杂的特征工程，从而可以专注于解决更加宏观的关键问题。 深度学习开源工具简介 常用框架对比 ** 中文书籍 OpenCV 4计算机视觉项目实战（原书第2版） 深度学习实践：计算机视觉 解析卷积神经网络-深度学习实践手册 画像処理100本ノック OpenCV-Python图像处理教程 "},"part1/":{"url":"part1/","title":"Python画像処理","keywords":"","body":"Python画像処理 https://qiita.com/gollowars/items/fb664c66f9a69e8c5cac http://ytbilly3636.hateblo.jp/entry/2017/03/26/102041 http://tatabox.hatenablog.com/entry/2013/07/14/154333 https://lp-tech.net/articles/DCw73?page=2 http://www.mathgram.xyz/entry/cv/contour http://www.cellstat.net/cellcount/ "},"part1/0423.html":{"url":"part1/0423.html","title":"4月23日","keywords":"","body":"Python画像処理 ① https://qiita.com/gollowars/items/fb664c66f9a69e8c5cac 環境づくり docker ps docker onexec -it c8eb0a31cd2b /bin/bash pip install opencv-python pip install opencv-contrib-python import numpy as np import cv2 r = 0 g = 0 b = 255 width = 480 height = 360 pixel = np.array([b,g,r],np.uint8) wGrid = np.array([pixel]*width,np.uint8) newImg = np.array([wGrid]*height,np.uint8) cv2.imshow('generate img',newImg) cv2.imwrite('createimg.png',newImg) cv2.waitKey(0) import numpy as np import cv2 r = 0 g = 0 b = 255 width = 480 height = 360 pixel = np.array([b,g,r],np.uint8) wGrid = np.array([pixel]width,np.uint8) newImg = np.array([wGrid]height,np.uint8) cv2.imshow('generate img',newImg) cv2.imwrite('createimg.png',newImg) cv2.waitKey(0)` 画像生成 画像読み込み 画像の色の平均値出す 画素をいじる トリミング リサイズ 加算 アフィン変換 反転 グレースケール変換 描画関数のCircleを使う。 色の抽出 カラーチェンネル入れ替え alphaチャンネルの操作 ※途中 "},"part2/":{"url":"part2/","title":"特徴量抽出","keywords":"","body":"README part2 "}}